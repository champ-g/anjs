<html ng-app="nameApp">
 
<head>
  <title>Program-1: FULLNAME</title>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js "> </script>
</head>
 
<body bgcolor="black" text="white">
    <center>
    <h1>Program-1</h1>
    <h1>Develop Angular JS program that allows user to input their first name and last name and 
        display their fullname. Note: The default values for first name and last name may be included in 
        the program.
    </h1>
    </center>
        <hr>
    <div ng-controller="nameCtrl">
<!-- Input fields for first name and last name -->
<center>
        <div>
            <h1> First Name </h1>
            <input type="text" ng-model="firstName" placeholder="Enter your first name">
        </div>
        <div>
            <h1> Last Name </h1>
            <input type="text" ng-model="lastName" placeholder="Enter your last name">    
        </div>
<br><br>
 
<!-- Button to display the full name -->
    <button ng-click="displayFullName()">Display Full Name</button>
 
 <!-- Display the full name -->
    <h1>Full Name is: {{ fullName }}</h1>
</center>
</div>
 
<script>
         angular.module('nameApp', [])
                        .controller('nameCtrl', function ($scope) {
 $scope.firstName = 'Rama';
 $scope.lastName = 'Krishna';
 $scope.displayFullName = function () {
 $scope.fullName = $scope.firstName + ' ' + $scope.lastName;
 };
});
</script>
</body>
</html>
------------------2--------------------
<!-- Develop an Angular JS application that displays a list of shopping items. Allow users to add and removeitems from the list using directives and controllers.Note: The default values of items may be included inthe program. -->
<html ng-app="shoppingApp">
 
<head>
    <title>AngularJS Shopping List</title>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.0/angular.min.js"></script>
</head>
 
<body ng-controller="shoppingCtrl">
    <h2>Shopping List</h2>
    <!-- Display the items in list -->
    <table>
        <tr ng-repeat="item in shoppingItems">
            <td>{{ item }}</td>
            <td><button ng-click="removeItem($index)">Remove</button></td>
        </tr>
    </table>
    <!-- Input field and button to add a new item -->
    <input type="text" ng-model="newItem" placeholder="Add a new item">
    <button ng-click="addItem()">Add Item</button>
    <script>
        angular.module('shoppingApp', [])
            .controller('shoppingCtrl', function ($scope) {
               
                $scope.shoppingItems = ['Apples', 'Bananas', 'Bread', 'Milk'];
              
                $scope.addItem = function () {
                    if ($scope.newItem) {
                        $scope.shoppingItems.push($scope.newItem);
                        $scope.newItem = ''; // Clear the input field after adding
                    }
                };
              
                $scope.removeItem = function (index) {
                    $scope.shoppingItems.splice(index, 1);
                };
            });
    </script>
</body>
 
</html>
----------------------------3-----------------------------
<html ng-app="calculatorApp">
 
<head>
    <title>AngularJS Calculator</title>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.0/angular.min.js"></script>
</head>
 
<body ng-Controller="calculatorController">
    <h2>Simple Calculator</h2>
    Enter Number 1:
    <input type="number" ng-model="num1" /> &nbsp;
    Select Operator:
    <select ng-model="operator">
        <option value="+">Add</option>
        <option value="-">Subtract</option>
        <option value="*">Multiply</option>
        <option value="/">Divide</option>
    </select> &nbsp;
    Enter number 2:
    <input type="number" ng-model="num2" /> <br><br>
    <button ng-click="calculate()">Calculate</button>
    <p ng-show="result!==undefined"> Result:{{result}}</p>
    <script>
        var app = angular.module('calculatorApp', []);
        app.controller('calculatorController', function ($scope) {
            $scope.calculate = function () {
                switch ($scope.operator) {
                    case '+': $scope.result = $scope.num1 + $scope.num2; break;
                    case '-': $scope.result = $scope.num1 - $scope.num2; break;
                    case '*': $scope.result = $scope.num1 * $scope.num2; break;
                    case '/': if ($scope.num2 !== 0)
                        $scope.result = $scope.num1 / $scope.num2;
                    else
                        $scope.result = 'Cannot divide by zero';
                        break;
 
                }
            };
        });
    </script>
</body>
 
</html>
-----------------------4-----------------
<!-- 4. Write an Angular JS application that can calculate factorial and compute square based on given user input. -->
<html ng-app="mathApp">
 
<head>
    <title>AngularJS Math Operations</title>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
 
<body ng-controller="mathController">
    <h2>Math Operations</h2>
    Enter a Number:
    <input type="number" ng-model="inputNumber" />
    <button ng-click="calculateFactorial()">Calculate Factorial</button>
    <button ng-click="calculateSquare()">Calculate Square</button>
    <p ng-show="factorialResult !== undefined">Factorial: {{ factorialResult }}</p>
    <p ng-show="squareResult !== undefined">Square: {{ squareResult }}</p>
    <script>
        var app = angular.module('mathApp', []);
        app.controller('mathController', function ($scope) {
            $scope.calculateFactorial = function () {
                if ($scope.inputNumber >= 0) {
                    $scope.factorialResult = factorial($scope.inputNumber);
                } else {
                    $scope.factorialResult = 'Cannot calculate factorial for negative numbers';
                }
            };
            $scope.calculateSquare = function () {
                $scope.squareResult = $scope.inputNumber * $scope.inputNumber;
            };
            function factorial(n) {
                if (n == 0 || n == 1) {
                    return 1;
                } else {
                    return n * factorial(n - 1);
                }
            }
        });
    </script>
</body>
 
</html>
--------------------------5---------------------
<!-- 5. Develop AngularJS application that displays a details of students and their CGPA. Allow users to read thenumber of
students and display the count. Note: Student details may be included in the program. -->
<html ng-app="studentApp">
 
<head>
    <title>AngularJS Student Details</title>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
 
<body ng-controller="studentController">
    <h2>Student Details</h2>
    Student Name:
    <input type="text" ng-model="name" />
    CGPA:
    <input type="number" ng-model="cgpa" ng-min="1" ng-max="10" />
    <button ng-click="addStudent()">Add Student</button>
    <p>Total Students: {{ students.length }}</p>
    <ul>
        <li ng-repeat="student in students">
            {{ student.name }} - CGPA: {{ student.cgpa }}
        </li>
    </ul>
    <script>
        var app = angular.module('studentApp', []);
        app.controller('studentController', function ($scope) {
            $scope.students = [];
            $scope.addStudent = function () {
                if ($scope.name && $scope.cgpa) {
                    $scope.students.push({
                        name: $scope.name,
                        cgpa: $scope.cgpa
                    });
                    // Clear the input fields
                    $scope.name = '';
                    $scope.cgpa = '';
                }
            };
        });
    </script>
</body>
 
</html>
--------------------------6-----------------
<!-- 6. Develop an AngularJS program to create a simple to-do list application. Allow users to add, edit, and deletetasks. Note: The default values for tasks may be included in the program. -->
<!DOCTYPE html>
<html ng-app="todoApp">
 
<head>
    <title>AngularJS Todo List</title>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
 
<body ng-controller="todoController">
    <h1>Todo List</h1>
    <!-- Form for adding a new task -->
    <form ng-submit="addTask()">
        Task:
        <input type="text" ng-model="newTask" required>
        <button type="submit">Add Task</button>
    </form>
    <br>
    <!-- Table to display task information -->
    <table>
        <thead>
            <tr>
                <th>Task</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <tr ng-repeat="task in tasks">
                <td>{{ task }}</td>
                <td>
                    <button ng-click="editTask($index)">Edit</button>
                    <button ng-click="deleteTask($index)">Delete</button>
                </td>
            </tr>
        </tbody>
    </table>
    <!-- Edit Task Modal -->
    <div ng-if="editingTaskIndex !== null">
        <h2>Edit Task</h2>
        Task:
        <input type="text" ng-model="tasks" required>
        <br>
        <button ng-click="saveEdit()">Save</button>
        <button ng-click="cancelEdit()">Cancel</button>
    </div>
    <script>
        var app = angular.module('todoApp', []);
        app.controller('todoController', function ($scope) {
            $scope.tasks = [
                'Task 1',
                'Task 2',
                'Task 3'
            ];
            $scope.newTask = '';
            $scope.editingTaskIndex = null;
            $scope.addTask = function () {
                $scope.tasks.push($scope.newTask);
                $scope.newTask = '';
            };
            $scope.editTask = function (index) {
                // Prompt for updated task with validation
                var updatedTask = prompt('Enter updated task:');
                // Check if the user pressed cancel
                if (updatedTask !== null) {
                    // Update the task
                    $scope.tasks.splice(index, 1, updatedTask);
                }
            };
            $scope.deleteTask = function (index) {
                $scope.tasks.splice(index, 1);
            };
        });
    </script>
</body>
 
</html>
